{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\josep\\\\dev\\\\wedding-ui\\\\pages\\\\invitation.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from '../components/MyLayout';\nimport Table from '../components/Table';\nimport TableStyle from '../components/TableStyle';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nvar Invitation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Invitation, _React$Component);\n\n  function Invitation(props) {\n    _classCallCheck(this, Invitation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Invitation).call(this, props));\n  }\n\n  _createClass(Invitation, [{\n    key: \"render\",\n    value: function render() {\n      var invitation = this.props.invitation; // const header = ['Guest', 'Attending', 'Meal']\n      // const rows = []\n      // if (invitation) {\n      //   for (var i = 0; i < invitation.guests.length; i++) {\n      //     let guest = invitation.guests[i]\n      //     rows.push([\n      //       guest.guest_id,\n      //       guest.guest_name,\n      //       // guest.attending,\n      //       guest.invitation_id\n      //     ])\n      //   }\n      // }\n\n      var products = [];\n\n      function addProducts(quantity) {\n        var startId = products.length;\n\n        for (var i = 0; i < quantity; i++) {\n          var id = startId + i;\n          products.push({\n            id: id,\n            name: 'Item name ' + id,\n            price: 2100 + i\n          });\n        }\n      }\n\n      addProducts(5);\n\n      if (!invitation) {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"'loading...'\");\n      } else {\n        console.log(\"got invitation: \".concat(invitation.guests[0].attending));\n      }\n\n      return __jsx(BootstrapTable, {\n        data: products,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(TableHeaderColumn, {\n        dataField: \"id\",\n        isKey: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Product ID\"), __jsx(TableHeaderColumn, {\n        dataField: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Product Name\"), __jsx(TableHeaderColumn, {\n        dataField: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Product Price\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(ctx) {\n      var invitationId, myUrl, response, data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              invitationId = ctx.query.invitationId;\n              console.log(\"invitation id: \".concat(invitationId));\n              myUrl = 'http://localhost:8080/invitations/' + invitationId;\n              console.log(\"url: \".concat(myUrl));\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch(myUrl));\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 9:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                invitation: data\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Invitation;\n}(React.Component); // <Layout>\n//   <TableStyle>\n//     <table>\n//       <thead>\n//         <tr>\n//           <th>Guest</th>\n//           <th>Attending</th>\n//           <th>Meal</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {invitation.guests.map(guest =>\n//           <tr key={guest.guest_id}>\n//             <td>\n//               {guest.guest_name}\n//             </td>\n//             <td>\n//               {guest.attending.toString()}\n//             </td>\n//             <td>\n//               {guest.meal}\n//             </td>\n//           </tr>\n//         )}\n//       </tbody>\n//     </table>\n//   </TableStyle>\n// </Layout>\n// { <Table tableHeader={header} tableRows={rows}/>\n//     \"invitation_id\": 4,\n//     \"rsvped\": false,\n//     \"guests\": [\n//         {\n//             \"guest_id\": 4,\n//             \"guest_name\": \"sophia korman\",\n//             \"attending\": false,\n//             \"invitation_id\": 2\n//         }\n//     ]\n// }\n\n\nexport default Invitation;","map":{"version":3,"sources":["C:/Users/josep/dev/wedding-ui/pages/invitation.js"],"names":["React","Layout","Table","TableStyle","Link","fetch","Dropdown","BootstrapTable","TableHeaderColumn","Invitation","props","invitation","products","addProducts","quantity","startId","length","i","id","push","name","price","console","log","guests","attending","ctx","invitationId","query","myUrl","response","json","data","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,uBAAhD;;IAEMC,U;;;;;AAEJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,mFACXA,KADW;AAElB;;;;6BAeQ;AACP,UAAMC,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA9B,CADO,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,QAAQ,GAAG,EAAjB;;AAEA,eAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,YAAMC,OAAO,GAAGH,QAAQ,CAACI,MAAzB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAApB,EAA8BG,CAAC,EAA/B,EAAmC;AACjC,cAAMC,EAAE,GAAGH,OAAO,GAAGE,CAArB;AACAL,UAAAA,QAAQ,CAACO,IAAT,CAAc;AACZD,YAAAA,EAAE,EAAEA,EADQ;AAEZE,YAAAA,IAAI,EAAE,eAAeF,EAFT;AAGZG,YAAAA,KAAK,EAAE,OAAOJ;AAHF,WAAd;AAKD;AACF;;AACDJ,MAAAA,WAAW,CAAC,CAAD,CAAX;;AAEA,UAAI,CAACF,UAAL,EAAiB;AACf,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF;AAGD,OAJD,MAIO;AACLW,QAAAA,OAAO,CAACC,GAAR,2BAA+BZ,UAAU,CAACa,MAAX,CAAkB,CAAlB,EAAqBC,SAApD;AACD;;AACD,aACE,MAAC,cAAD;AAAgB,QAAA,IAAI,EAAGb,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,IAA7B;AAAkC,QAAA,KAAK,EAAG,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,MAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI,MAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHJ,CADF;AAOD;;;oCAzD4Bc,G;;;;;;AACrBC,cAAAA,Y,GAAeD,GAAG,CAACE,KAAJ,CAAUD,Y;AAC/BL,cAAAA,OAAO,CAACC,GAAR,0BAA8BI,YAA9B;AACME,cAAAA,K,GAAQ,uCAAuCF,Y;AACrDL,cAAAA,OAAO,CAACC,GAAR,gBAAoBM,KAApB;;+CACuBxB,KAAK,CAACwB,KAAD,C;;;AAAtBC,cAAAA,Q;;+CACaA,QAAQ,CAACC,IAAT,E;;;AAAbC,cAAAA,I;+CAEC;AACLrB,gBAAAA,UAAU,EAAEqB;AADP,e;;;;;;;;;;;;EAdchC,KAAK,CAACiC,S,GAkE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAexB,UAAf","sourcesContent":["import React from \"react\";\r\nimport Layout from '../components/MyLayout';\r\nimport Table from '../components/Table';\r\nimport TableStyle from '../components/TableStyle';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\n\r\nclass Invitation extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  static async getInitialProps(ctx) {\r\n    const invitationId = ctx.query.invitationId\r\n    console.log(`invitation id: ${invitationId}`)\r\n    const myUrl = 'http://localhost:8080/invitations/' + invitationId\r\n    console.log(`url: ${myUrl}`)\r\n    const response = await fetch(myUrl)\r\n    const data = await response.json();\r\n\r\n    return {\r\n      invitation: data\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const invitation = this.props.invitation\r\n    // const header = ['Guest', 'Attending', 'Meal']\r\n    // const rows = []\r\n    // if (invitation) {\r\n    //   for (var i = 0; i < invitation.guests.length; i++) {\r\n    //     let guest = invitation.guests[i]\r\n    //     rows.push([\r\n    //       guest.guest_id,\r\n    //       guest.guest_name,\r\n    //       // guest.attending,\r\n    //       guest.invitation_id\r\n    //     ])\r\n    //   }\r\n    // }\r\n    const products = [];\r\n\r\n    function addProducts(quantity) {\r\n      const startId = products.length;\r\n      for (let i = 0; i < quantity; i++) {\r\n        const id = startId + i;\r\n        products.push({\r\n          id: id,\r\n          name: 'Item name ' + id,\r\n          price: 2100 + i\r\n        });\r\n      }\r\n    }\r\n    addProducts(5);\r\n\r\n    if (!invitation) {\r\n      return (\r\n        <div>'loading...'</div>\r\n      );\r\n    } else {\r\n      console.log(`got invitation: ${invitation.guests[0].attending}`)\r\n    }\r\n    return (\r\n      <BootstrapTable data={ products }>\r\n          <TableHeaderColumn dataField='id' isKey={ true }>Product ID</TableHeaderColumn>\r\n          <TableHeaderColumn dataField='name'>Product Name</TableHeaderColumn>\r\n          <TableHeaderColumn dataField='price'>Product Price</TableHeaderColumn>\r\n      </BootstrapTable>\r\n    );\r\n  }\r\n}\r\n\r\n// <Layout>\r\n//   <TableStyle>\r\n//     <table>\r\n//       <thead>\r\n//         <tr>\r\n//           <th>Guest</th>\r\n//           <th>Attending</th>\r\n//           <th>Meal</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {invitation.guests.map(guest =>\r\n//           <tr key={guest.guest_id}>\r\n//             <td>\r\n//               {guest.guest_name}\r\n//             </td>\r\n//             <td>\r\n//               {guest.attending.toString()}\r\n//             </td>\r\n//             <td>\r\n//               {guest.meal}\r\n//             </td>\r\n//           </tr>\r\n//         )}\r\n//       </tbody>\r\n//     </table>\r\n//   </TableStyle>\r\n// </Layout>\r\n// { <Table tableHeader={header} tableRows={rows}/>\r\n//     \"invitation_id\": 4,\r\n//     \"rsvped\": false,\r\n//     \"guests\": [\r\n//         {\r\n//             \"guest_id\": 4,\r\n//             \"guest_name\": \"sophia korman\",\r\n//             \"attending\": false,\r\n//             \"invitation_id\": 2\r\n//         }\r\n//     ]\r\n// }\r\nexport default Invitation;\r\n"]},"metadata":{},"sourceType":"module"}