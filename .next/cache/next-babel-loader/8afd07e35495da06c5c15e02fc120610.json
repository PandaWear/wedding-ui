{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\josep\\\\dev\\\\wedding-ui\\\\pages\\\\invitation.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from '../components/MyLayout';\nimport Table from '../components/Table';\nimport TableStyle from '../components/TableStyle';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nvar Invitation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Invitation, _React$Component);\n\n  function Invitation(props) {\n    _classCallCheck(this, Invitation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Invitation).call(this, props));\n  }\n\n  _createClass(Invitation, [{\n    key: \"render\",\n    value: function render() {\n      var invitation = this.props.invitation;\n      var guests = [];\n\n      if (invitation) {\n        for (var i = 0; i < invitation.guests.length; i++) {\n          var guestElem = invitation.guests[i];\n          guests.push({\n            guest: guestElem.guest_name,\n            attending: guestElem.attending,\n            meal: guestElem.meal\n          });\n        }\n      }\n\n      if (!invitation) {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"'loading...'\");\n      } else {\n        console.log(\"got invitation: \".concat(invitation.guests[0].attending));\n      }\n\n      function onAfterSaveCell(row, cellName, cellValue) {\n        alert(\"Save cell \".concat(cellName, \" with value \").concat(cellValue));\n        var rowStr = '';\n\n        for (var prop in row) {\n          rowStr += prop + ': ' + row[prop] + '\\n';\n        }\n\n        alert('The whole row :\\n' + rowStr);\n      }\n\n      function onBeforeSaveCell(row, cellName, cellValue) {\n        // You can do any validation on here for editing value,\n        // return false for reject the editing\n        if (cellName == 'meal') {\n          if (cellValue != 'BURGER' && cellValue != 'CHICKEN') {\n            console.log(\"trying to change to invalid meal: \".concat(cellValue));\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      var cellEditProp = {\n        mode: 'click',\n        blurToSave: true,\n        beforeSaveCell: onBeforeSaveCell,\n        // a hook for before saving cell\n        afterSaveCell: onAfterSaveCell // a hook for after saving cell\n\n      };\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, __jsx(BootstrapTable, {\n        data: guests,\n        cellEdit: cellEditProp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(TableHeaderColumn, {\n        dataField: \"guest\",\n        isKey: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Guest\"), __jsx(TableHeaderColumn, {\n        dataField: \"attending\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Attending\"), __jsx(TableHeaderColumn, {\n        dataField: \"meal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Meal\")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(ctx) {\n      var invitationId, myUrl, response, data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              invitationId = ctx.query.invitationId;\n              console.log(\"invitation id: \".concat(invitationId));\n              myUrl = 'http://localhost:8080/invitations/' + invitationId;\n              console.log(\"url: \".concat(myUrl));\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch(myUrl));\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 9:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                invitation: data\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Invitation;\n}(React.Component); // <Layout>\n//   <TableStyle>\n//     <table>\n//       <thead>\n//         <tr>\n//           <th>Guest</th>\n//           <th>Attending</th>\n//           <th>Meal</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {invitation.guests.map(guest =>\n//           <tr key={guest.guest_id}>\n//             <td>\n//               {guest.guest_name}\n//             </td>\n//             <td>\n//               {guest.attending.toString()}\n//             </td>\n//             <td>\n//               {guest.meal}\n//             </td>\n//           </tr>\n//         )}\n//       </tbody>\n//     </table>\n//   </TableStyle>\n// </Layout>\n// { <Table tableHeader={header} tableRows={rows}/>\n//     \"invitation_id\": 4,\n//     \"rsvped\": false,\n//     \"guests\": [\n//         {\n//             \"guest_id\": 4,\n//             \"guest_name\": \"sophia korman\",\n//             \"attending\": false,\n//             \"invitation_id\": 2\n//         }\n//     ]\n// }\n\n\nexport default Invitation;","map":{"version":3,"sources":["C:/Users/josep/dev/wedding-ui/pages/invitation.js"],"names":["React","Layout","Table","TableStyle","Link","fetch","Dropdown","BootstrapTable","TableHeaderColumn","Invitation","props","invitation","guests","i","length","guestElem","push","guest","guest_name","attending","meal","console","log","onAfterSaveCell","row","cellName","cellValue","alert","rowStr","prop","onBeforeSaveCell","cellEditProp","mode","blurToSave","beforeSaveCell","afterSaveCell","ctx","invitationId","query","myUrl","response","json","data","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Layout from '../components/MyLayout';\r\nimport Table from '../components/Table';\r\nimport TableStyle from '../components/TableStyle';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\n\r\nclass Invitation extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  static async getInitialProps(ctx) {\r\n    const invitationId = ctx.query.invitationId\r\n    console.log(`invitation id: ${invitationId}`)\r\n    const myUrl = 'http://localhost:8080/invitations/' + invitationId\r\n    console.log(`url: ${myUrl}`)\r\n    const response = await fetch(myUrl)\r\n    const data = await response.json();\r\n\r\n    return {\r\n      invitation: data\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const invitation = this.props.invitation\r\n    const guests = []\r\n    if (invitation) {\r\n      for (var i = 0; i < invitation.guests.length; i++) {\r\n        let guestElem = invitation.guests[i]\r\n        guests.push({\r\n          guest: guestElem.guest_name,\r\n          attending: guestElem.attending,\r\n          meal: guestElem.meal\r\n        })\r\n      }\r\n    }\r\n    if (!invitation) {\r\n      return (\r\n        <div>'loading...'</div>\r\n      );\r\n    } else {\r\n      console.log(`got invitation: ${invitation.guests[0].attending}`)\r\n    }\r\n\r\n    function onAfterSaveCell(row, cellName, cellValue) {\r\n      alert(`Save cell ${cellName} with value ${cellValue}`);\r\n\r\n      let rowStr = '';\r\n      for (const prop in row) {\r\n        rowStr += prop + ': ' + row[prop] + '\\n';\r\n      }\r\n\r\n      alert('The whole row :\\n' + rowStr);\r\n    }\r\n\r\n    function onBeforeSaveCell(row, cellName, cellValue) {\r\n      // You can do any validation on here for editing value,\r\n      // return false for reject the editing\r\n      if (cellName == 'meal') {\r\n        if (cellValue != 'BURGER' && cellValue != 'CHICKEN') {\r\n          console.log(`trying to change to invalid meal: ${cellValue}`)\r\n          return false\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    const cellEditProp = {\r\n      mode: 'click',\r\n      blurToSave: true,\r\n      beforeSaveCell: onBeforeSaveCell, // a hook for before saving cell\r\n      afterSaveCell: onAfterSaveCell  // a hook for after saving cell\r\n    };\r\n\r\n    return (\r\n      <Layout>\r\n        <BootstrapTable data={ guests }  cellEdit={ cellEditProp }>\r\n            <TableHeaderColumn dataField='guest' isKey={ true }>Guest</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='attending'>Attending</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='meal'>Meal</TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n// <Layout>\r\n//   <TableStyle>\r\n//     <table>\r\n//       <thead>\r\n//         <tr>\r\n//           <th>Guest</th>\r\n//           <th>Attending</th>\r\n//           <th>Meal</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {invitation.guests.map(guest =>\r\n//           <tr key={guest.guest_id}>\r\n//             <td>\r\n//               {guest.guest_name}\r\n//             </td>\r\n//             <td>\r\n//               {guest.attending.toString()}\r\n//             </td>\r\n//             <td>\r\n//               {guest.meal}\r\n//             </td>\r\n//           </tr>\r\n//         )}\r\n//       </tbody>\r\n//     </table>\r\n//   </TableStyle>\r\n// </Layout>\r\n// { <Table tableHeader={header} tableRows={rows}/>\r\n//     \"invitation_id\": 4,\r\n//     \"rsvped\": false,\r\n//     \"guests\": [\r\n//         {\r\n//             \"guest_id\": 4,\r\n//             \"guest_name\": \"sophia korman\",\r\n//             \"attending\": false,\r\n//             \"invitation_id\": 2\r\n//         }\r\n//     ]\r\n// }\r\nexport default Invitation;\r\n"]},"metadata":{},"sourceType":"module"}