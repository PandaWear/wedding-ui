{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\dev\\\\wedding-ui\\\\pages\\\\invitation.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from '../components/MyLayout';\nimport Table from '../components/Table';\nimport TableStyle from '../components/TableStyle';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nclass Invitation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static async getInitialProps(ctx) {\n    const invitationId = ctx.query.invitationId;\n    console.log(`invitation id: ${invitationId}`);\n    const myUrl = 'http://localhost:8080/invitations/' + invitationId;\n    console.log(`url: ${myUrl}`);\n    const response = await fetch(myUrl);\n    const data = await response.json();\n    return {\n      invitation: data\n    };\n  }\n\n  render() {\n    const invitation = this.props.invitation;\n    const guests = [];\n\n    if (invitation) {\n      for (var i = 0; i < invitation.guests.length; i++) {\n        let guestElem = invitation.guests[i];\n        guests.push({\n          guest: guestElem.guest_name,\n          attending: guestElem.attending,\n          meal: guestElem.meal\n        });\n      }\n    }\n\n    if (!invitation) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"'loading...'\");\n    } else {\n      console.log(`got invitation: ${invitation.guests[0].attending}`);\n    }\n\n    function onAfterSaveCell(row, cellName, cellValue) {\n      alert(`Save cell ${cellName} with value ${cellValue}`);\n      let rowStr = '';\n\n      for (const prop in row) {\n        rowStr += prop + ': ' + row[prop] + '\\n';\n      }\n\n      alert('The whole row :\\n' + rowStr);\n    }\n\n    function onBeforeSaveCell(row, cellName, cellValue) {\n      // You can do any validation on here for editing value,\n      // return false for reject the editing\n      if (cellName == 'meal') {\n        if (cellValue != 'BURGER' || cellValue != 'CHICKEN') {\n          console.log(`trying to change to invalid meal: ${cellValue}`);\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    const cellEditProp = {\n      mode: 'click',\n      blurToSave: true,\n      beforeSaveCell: onBeforeSaveCell,\n      // a hook for before saving cell\n      afterSaveCell: onAfterSaveCell // a hook for after saving cell\n\n    };\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(BootstrapTable, {\n      data: guests,\n      cellEdit: cellEditProp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(TableHeaderColumn, {\n      dataField: \"guest\",\n      isKey: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Guest\"), __jsx(TableHeaderColumn, {\n      dataField: \"attending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Attending\"), __jsx(TableHeaderColumn, {\n      dataField: \"meal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Meal\")));\n  }\n\n} // <Layout>\n//   <TableStyle>\n//     <table>\n//       <thead>\n//         <tr>\n//           <th>Guest</th>\n//           <th>Attending</th>\n//           <th>Meal</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {invitation.guests.map(guest =>\n//           <tr key={guest.guest_id}>\n//             <td>\n//               {guest.guest_name}\n//             </td>\n//             <td>\n//               {guest.attending.toString()}\n//             </td>\n//             <td>\n//               {guest.meal}\n//             </td>\n//           </tr>\n//         )}\n//       </tbody>\n//     </table>\n//   </TableStyle>\n// </Layout>\n// { <Table tableHeader={header} tableRows={rows}/>\n//     \"invitation_id\": 4,\n//     \"rsvped\": false,\n//     \"guests\": [\n//         {\n//             \"guest_id\": 4,\n//             \"guest_name\": \"sophia korman\",\n//             \"attending\": false,\n//             \"invitation_id\": 2\n//         }\n//     ]\n// }\n\n\nexport default Invitation;","map":{"version":3,"sources":["C:/Users/josep/dev/wedding-ui/pages/invitation.js"],"names":["React","Layout","Table","TableStyle","Link","fetch","Dropdown","BootstrapTable","TableHeaderColumn","Invitation","Component","constructor","props","getInitialProps","ctx","invitationId","query","console","log","myUrl","response","data","json","invitation","render","guests","i","length","guestElem","push","guest","guest_name","attending","meal","onAfterSaveCell","row","cellName","cellValue","alert","rowStr","prop","onBeforeSaveCell","cellEditProp","mode","blurToSave","beforeSaveCell","afterSaveCell"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Layout from '../components/MyLayout';\r\nimport Table from '../components/Table';\r\nimport TableStyle from '../components/TableStyle';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\n\r\nclass Invitation extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  static async getInitialProps(ctx) {\r\n    const invitationId = ctx.query.invitationId\r\n    console.log(`invitation id: ${invitationId}`)\r\n    const myUrl = 'http://localhost:8080/invitations/' + invitationId\r\n    console.log(`url: ${myUrl}`)\r\n    const response = await fetch(myUrl)\r\n    const data = await response.json();\r\n\r\n    return {\r\n      invitation: data\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const invitation = this.props.invitation\r\n    const guests = []\r\n    if (invitation) {\r\n      for (var i = 0; i < invitation.guests.length; i++) {\r\n        let guestElem = invitation.guests[i]\r\n        guests.push({\r\n          guest: guestElem.guest_name,\r\n          attending: guestElem.attending,\r\n          meal: guestElem.meal\r\n        })\r\n      }\r\n    }\r\n    if (!invitation) {\r\n      return (\r\n        <div>'loading...'</div>\r\n      );\r\n    } else {\r\n      console.log(`got invitation: ${invitation.guests[0].attending}`)\r\n    }\r\n\r\n    function onAfterSaveCell(row, cellName, cellValue) {\r\n      alert(`Save cell ${cellName} with value ${cellValue}`);\r\n\r\n      let rowStr = '';\r\n      for (const prop in row) {\r\n        rowStr += prop + ': ' + row[prop] + '\\n';\r\n      }\r\n\r\n      alert('The whole row :\\n' + rowStr);\r\n    }\r\n\r\n    function onBeforeSaveCell(row, cellName, cellValue) {\r\n      // You can do any validation on here for editing value,\r\n      // return false for reject the editing\r\n      if (cellName == 'meal') {\r\n        if (cellValue != 'BURGER' || cellValue != 'CHICKEN') {\r\n          console.log(`trying to change to invalid meal: ${cellValue}`)\r\n          return false\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    const cellEditProp = {\r\n      mode: 'click',\r\n      blurToSave: true,\r\n      beforeSaveCell: onBeforeSaveCell, // a hook for before saving cell\r\n      afterSaveCell: onAfterSaveCell  // a hook for after saving cell\r\n    };\r\n\r\n    return (\r\n      <Layout>\r\n        <BootstrapTable data={ guests }  cellEdit={ cellEditProp }>\r\n            <TableHeaderColumn dataField='guest' isKey={ true }>Guest</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='attending'>Attending</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='meal'>Meal</TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n// <Layout>\r\n//   <TableStyle>\r\n//     <table>\r\n//       <thead>\r\n//         <tr>\r\n//           <th>Guest</th>\r\n//           <th>Attending</th>\r\n//           <th>Meal</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {invitation.guests.map(guest =>\r\n//           <tr key={guest.guest_id}>\r\n//             <td>\r\n//               {guest.guest_name}\r\n//             </td>\r\n//             <td>\r\n//               {guest.attending.toString()}\r\n//             </td>\r\n//             <td>\r\n//               {guest.meal}\r\n//             </td>\r\n//           </tr>\r\n//         )}\r\n//       </tbody>\r\n//     </table>\r\n//   </TableStyle>\r\n// </Layout>\r\n// { <Table tableHeader={header} tableRows={rows}/>\r\n//     \"invitation_id\": 4,\r\n//     \"rsvped\": false,\r\n//     \"guests\": [\r\n//         {\r\n//             \"guest_id\": 4,\r\n//             \"guest_name\": \"sophia korman\",\r\n//             \"attending\": false,\r\n//             \"invitation_id\": 2\r\n//         }\r\n//     ]\r\n// }\r\nexport default Invitation;\r\n"]},"metadata":{},"sourceType":"module"}